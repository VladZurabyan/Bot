# –ü—Ä–æ–≤–µ—Ä–∏–º –∏ –∏—Å–ø—Ä–∞–≤–∏–º main.py —Å —É—á—ë—Ç–æ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫
fixed_main_py = '''\
import os
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes

TOKEN = os.getenv("TOKEN")  # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üöÄ –ù–∞—á–∞—Ç—å", callback_data="start_clicked")],
        [InlineKeyboardButton("üí∏ –ê–¥—Ä–µ—Å TRON (TRC-20)", callback_data="get_tron")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="üëã –ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:",
        reply_markup=reply_markup
    )

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    user = query.from_user

    if query.data == "start_clicked":
        message = (
            f"üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.first_name}!\n\n"
            "–ú—ã —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –≤ –Ω–∞—à–µ–º Telegram-–±–æ—Ç–µ. –ù–∞–¥–µ–µ–º—Å—è, —Ç–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è! üòä"
        )
        with open("welcome_usdt_bright.jpg", "rb") as photo:
            await context.bot.send_photo(chat_id=query.message.chat_id, photo=photo, caption=message)

    elif query.data == "get_tron":
        tron_address = "TABC1234567890XYZ..."  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π —Ä–µ–∞–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å TRC-20
        await context.bot.send_message(
            chat_id=query.message.chat_id,
            text=f"üí∞ –ê–¥—Ä–µ—Å TRON (TRC-20):\\n`{tron_address}`",
            parse_mode="Markdown"
        )

if __name__ == "__main__":
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))
    app.run_polling()
'''

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π main.py
with open(os.path.join(project_name, "main.py"), "w", encoding="utf-8") as f:
    f.write(fixed_main_py)

# –ü–µ—Ä–µ—Å–æ–∑–¥–∞—ë–º –∞—Ä—Ö–∏–≤
zip_path = "/mnt/data/telegram_greeting_bot_fixed.zip"
with zipfile.ZipFile(zip_path, 'w') as zipf:
    for root, _, files in os.walk(project_name):
        for file in files:
            full_path = os.path.join(root, file)
            arcname = os.path.relpath(full_path, project_name)
            zipf.write(full_path, arcname)

zip_path  # –ü—É—Ç—å –∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–º—É –∞—Ä—Ö–∏–≤—É

